







: reset71  n n * 0 do dup 

	100 rnd 
	71 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset72  n n * 0 do dup 

	100 rnd 
	72 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset73  n n * 0 do dup 

	100 rnd 
	73 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset74  n n * 0 do dup 

	100 rnd 
	74 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset75  n n * 0 do dup 

	100 rnd 
	75 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset76  n n * 0 do dup 

	100 rnd 
	76 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset77  n n * 0 do dup 

	100 rnd 
	77 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset78  n n * 0 do dup 

	100 rnd 
	78 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset79  n n * 0 do dup 

	100 rnd 
	79 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset80  n n * 0 do dup 

	100 rnd 
	80 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset81  n n * 0 do dup 

	100 rnd 
	81 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset82  n n * 0 do dup 

	100 rnd 
	82 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset83  n n * 0 do dup 

	100 rnd 
	83 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset84  n n * 0 do dup 

	100 rnd 
	84 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;




: reset85  n n * 0 do dup 

	100 rnd 
	85 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset86  n n * 0 do dup 

	100 rnd 
	86 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset87  n n * 0 do dup 

	100 rnd 
	87 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset88  n n * 0 do dup 

	100 rnd 
	88 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;



: reset89  n n * 0 do dup 

	100 rnd 
	89 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;




: reset90  n n * 0 do dup 

	100 rnd 
	90 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset91  n n * 0 do dup 

	100 rnd 
	91 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset92  n n * 0 do dup 

	100 rnd 
	92 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset93  n n * 0 do dup 

	100 rnd 
	93 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset94  n n * 0 do dup 

	100 rnd 
	94 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset95  n n * 0 do dup 

	100 rnd 
	95 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;


: reset96  n n * 0 do dup 

	100 rnd 
	96 1 - <= if 1 
	else 0 
	then 
 	
	swap I + C! loop drop ;







: rnd10 10 rnd 
	0 <= if 1 
	else 0 
	then ;

: reset10 n n * 0 do dup rnd10 swap I + C! loop drop ;

: rnd20 10 rnd 
	1 <= if 1 
	else 0 
	then ;

: reset20 n n * 0 do dup rnd20 swap I + C! loop drop ;

: rnd30 10 rnd 
	2 <= if 1 
	else 0 
	then ;

: reset30 n n * 0 do dup rnd30 swap I + C! loop drop ;





: rnd40 10 rnd 
	3 <= if 1 
	else 0 
	then ;

: reset40 n n * 0 do dup rnd40 swap I + C! loop drop ;

: rnd60 10 rnd 
	5 <= if 1 
	else 0 
	then ;

: reset60 n n * 0 do dup rnd60 swap I + C! loop drop ;

: rnd70 10 rnd 
	6 <= if 1 
	else 0 
	then ;

: reset70 n n * 0 do dup rnd70 swap I + C! loop drop ;

: rnd80 10 rnd 
	7 <= if 1 
	else 0 
	then ;

: reset80 n n * 0 do dup rnd80 swap I + C! loop drop ;

: rnd90 10 rnd 
	8 <= if 1 
	else 0 
	then ;

: reset90 n n * 0 do dup rnd90 swap I + C! loop drop ;



1 6 8 a1 array_!
1 7 9 a1 array_!
1 7 10 a1 array_!
1 6 10 a1 array_!
1 5 9 a1 array_!

: stable1 dup reset0 
1 6 8 3 pick array_!
1 7 9 3 pick array_!
1 7 10 3 pick array_!
1 6 10 3 pick array_!
1 5 9 3 pick array_! drop ;

: line4 dup reset0
1 7 8 3 pick array_!
1 8 8 3 pick array_!
1 9 8 3 pick array_!
1 10 8 3 pick array_! drop ;

: blinker dup reset0
1 7 8 3 pick array_!
1 8 8 3 pick array_!
1 9 8 3 pick array_! drop ;


: floater dup reset0
1 6 8 3 pick array_!
1 7 9 3 pick array_!
1 8 9 3 pick array_!
1 8 8 3 pick array_!
1 8 7 3 pick array_! drop ;

: topline3 dup reset0
1 n 2 / 1 - 1 3 pick array_!
1 n 2 / 1 3 pick array_!
1 n 2 / 1 + 1 3 pick array_! drop ;

: methuselah1 dup reset0
1 n 2 /    n 2 /       3 pick array_!
1 n 2 / n 2 / 1 +      3 pick array_!
1 n 2 / 1 + n 2 / 1 -  3 pick array_!
1 n 2 / 2 + n 2 / 1 -  3 pick array_!
1 n 2 / 3 + n 2 / 1 -  3 pick array_! drop ;


: piheptomino dup reset0
1 n 2 /       n 2 /       3 pick array_!
1 n 2 /       n 2 / 1 +   3 pick array_!
1 n 2 /       n 2 / 2 +   3 pick array_!
1 n 2 / 1 +   n 2 / 2 +   3 pick array_!
1 n 2 / 2 +   n 2 / 2 +   3 pick array_! 
1 n 2 / 2 +   n 2 / 1 +   3 pick array_!
1 n 2 / 2 +   n 2 /       3 pick array_!
drop ;





: lineN dup reset0 
	swap 1 do 
1 n 2 / I 1 + 2 / + 	n 2 / 3 pick array_!
1 n 2 / I 2 / -		n 2 / 3 pick array_!
loop drop ;




: lines dup reset0 
	swap 1 do 
1 n 2 / I 1 + 2 / + 	n 2 / 3 pick array_!
1 n 2 / I 2 / -		n 2 / 3 pick array_!
loop ;

: 6thMarch 10 swap lines
	1 1 4 3 pick array_!
	1 2 4 3 pick array_!
	1 5 4 3 pick array_!
	1 6 4 3 pick array_!
	1 9 4 3 pick array_!
	1 10 4 3 pick array_!
drop ;

: 6thMarch_2 dup reset0
	1 1 1 + 5 3 pick array_!
	1 2 1 + 5 3 pick array_!
	1 5 1 + 5 3 pick array_!
	1 6 1 + 5 3 pick array_!
	1 9 1 + 5 3 pick array_!
	1 10 1 + 5 3 pick array_!
	
	1 2 6 3 pick array_!
	1 3 6 3 pick array_!
	1 4 6 3 pick array_!
	1 5 6 3 pick array_!
	1 6 6 3 pick array_!
	1 7 6 3 pick array_!
	1 8 6 3 pick array_!
	1 9 6 3 pick array_!
	1 10 6 3 pick array_!
	1 11 6 3 pick array_!


drop ;







: 2stripes dup reset0
	n n * 1 do dup I + 
	
	I 2 mod 0= if 1 swap c! else 0 swap c!
	
	then 1 1 1 a1 array_!
	
	loop drop ;



: 2stripe n 0 do n 0 do dup

	I 2 mod 0= if 1 else 0 
	then I 1 + J 1 + 3 pick array_!

	drop loop loop drop ;


: 3stripe n 0 do n 0 do dup

	I 3 mod 0= if 1 else 0 
	then I 1 + J 1 + 3 pick array_!

	drop loop loop drop ;


: 4stripe n 0 do n 0 do dup

	I 2 + 4 mod 0= if 1 else 0 
	then I 1 + J 1 + 3 pick array_!

	drop loop loop drop ;





: checkerboard n 1 + 1 do n 1 + 1 do dup

	I J + 2 mod 0= if 1 else 0 
	then I J 3 pick array_!

	drop loop loop drop ;


: crossstripes n 1 + 1 do n 1 + 1 do dup

	I 4 mod 0= if 1 else 
	J 4 mod 0= if 1 else 0
	then 
	then I J 3 pick array_!

	drop loop loop drop ;


: diag3 n 1 + 1 do n 1 + 1 do dup 

	I J + 3 mod 0= if 1 else 0
	then I J 3 pick array_!

	drop loop loop drop ;


: diag5 n 1 + 1 do n 1 + 1 do dup 

	I J + 5 mod 0= if 1 else 0
	then I J 3 pick array_!

	drop loop loop drop ;

: WRONG n 1 + 1 do dup 

	I 3 mod 1 = if 1 I I 2 * 3 pick array_!
		       1 1 I I 2 * 1 + 3 pick array_!
	else 0 I I 2 * 3 pick array_!
	then 

	loop drop ;



: diag dup reset0 n 1 + 1 do n 1 + 1 do dup 

	I 3    mod 0= J 5 - 6  mod 0= and if 1 else
	I 3    mod 0= J 6      mod 0= and if 1 else

	I 1 - 3 mod 0= J 1 - 6 mod 0= and if 1 else
	I 1 - 3 mod 0= J 2 - 6 mod 0= and if 1 else

	I 2 - 3 mod 0= J 3 - 6 mod 0= and if 1 else
	I 2 - 3 mod 0= J 4 - 6 mod 0= and if 1 else

        0


	then then then then then then I J 3 pick array_!

	drop loop loop drop ;


: diag_ dup reset0 n 1 + 1 do n 1 + 1 do dup 

	J 1 + 1 / I - 4 mod 0= if 1 else 0

	then I J 3 pick array_!

	drop loop loop drop ;




: diagB dup reset0 n 1 + 1 do n 1 + 1 do dup 

	I 3     mod 0= J 5 - 6 mod 0= and if 1 else
	I 3     mod 0= J     6 mod 0= and if 1 else

	I 1 - 3 mod 0= J 1 - 6 mod 0= and if 1 else
	I 1 - 3 mod 0= J 2 - 6 mod 0= and if 1 else

	I 2 - 3 mod 0= J 3 - 6 mod 0= and if 1 else
	I 2 - 3 mod 0= J 4 - 6 mod 0= and if 1 else

        0


	then then then then then then J I 3 pick array_!

	drop loop loop drop ;




